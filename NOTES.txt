ALGORITHM

Simulate data: given distribution simulate client arrivals, demands and their time-windows in days (4-5 days)

Optimization problem:
    Select which customer to serve
        - 230 new customers per day 
        - max number of deliveries to respect capacity constraint and time constraint
        - look at probability of other near customers in future
        - Each customer has demand expressed in: set up time (related to set up cost), kg, available day
    Solve VRP for those customers
        - set maximum time for VRP solver: 30 sec (never used, less than 1 sec)
        - set maximum number of costumers per vehicle: 5 customers
        - set maximum total time of each route: 480 min (8 h)
        - set capacity constraint per vehicle: 1000 kg
        - I'm assuming vehicles with 60km/h velocities
        - objective function: minimize total travel and set up times and number of vehicles
        OBS: ortools works with integer objective function

TO DO:
1_ Implement new policy: select customer looking at their distance from depot and if they are distant look at probability of future near customers.
                         Take into account also set up times, for distant customers with large set up time add other customers could lead to
                         unfeasibility. Postpone client is a bad thing: don't wait for future customers, coming later then last available day.
                         Work on number of customer to select, I need a different approach with respect to previous policy


100 days simulation, seed 1 (first 10 days not considered in simulation)
EP:
- objective function: 518152
- postponed clients: 0
- mean of empty vehicles per day: 1.6593406593406594
- mean of served cliets: 210.17582417582418
- time for simulation: 00:09:55
DP:
- objective function: 515211
- postponed clients: 6377
- mean of empty vehicles per day: 1.7692307692307692
- mean of served cliets: 208.85714285714286
- time for simulation: 00:09:38
NP:
- objective function: 517448
- postponed clients: 0
- mean of empty vehicles per day: 1.7142857142857142
- mean of served cliets: 210.06593406593407
- time for simulation: 00:11:30

--------------------------------------------------------------------------------------------------------------------------------------------------

VRPH, version 1.0
Copyright 2010 Chris Groer
Distributed under Common Public License 1.0

Usage: vrp_ej.exe -f vrp_file -j num_ejected -t num_trials -m method [-s sol_file -out out_file -n num_heur_sols -v]
         num_ejected should be something less than 20 or so
         num_trials can be fairly large as the procedure is fast (say 1000)
         method must be 0 (RANDOM search), 1 (REGRET search)
         Options:
         Can start with a solution in sol_file or it will generate an initial
            solution for you
         Can write the final best solution discovered to out_file
         Adding -v will print verbose output
Usage: vrp_init.exe -f vrp_file -m method [-c]
         method should be 0 for CW, 1 for Sweep
         If -c option is given, then all routes are cleaned up at the end
                 by running intra-route improvements

--------------------------------------------------------------------------------------------------------------------------------------------------

VRP code reference:
https://developers.google.com/optimization/routing/vrp

--------------------------------------------------------------------------------------------------------------------------------------------------

Spatial statistics: extract spatial distribution from real data:
https://automating-gis-processes.github.io/2016/Lesson2-geopandas-basics.html
https://towardsdatascience.com/getting-started-with-geographic-data-science-in-python-part-3-ddf55130840b
